{
	"info": {
		"_postman_id": "28116269-8172-430c-9c02-fd49ba2d0539",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25476206"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/first\r",
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_3\r",
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"var req_name = jsonData.name;\r",
							"pm.test(\"Проверить, что name в ответе равно name s request\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.name).to.eql('maks');\r",
							"});\r",
							"console.log(req_name)\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"var req_age = jsonData.age;\r",
							"pm.test(\"Проверить, что age в ответе равно age s request\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.age).to.eql('35');\r",
							"});\r",
							"console.log(req_age)\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"var req_salary = jsonData.salary;\r",
							"    pm.test(\"Проверить, что salary в ответе равно salary s request\", function () {\r",
							"      \r",
							"        pm.expect(jsonData.salary).to.eql(1000);\r",
							"    });\r",
							"    console.log(req_salary)\r",
							"\r",
							"// 7. Спарсить request.\r",
							"var req = request.data; \r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Проверить, что name в ответе равно name s request (name забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"console.log(\"req_name =\" , req.name);\r",
							"\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Проверить, что age в ответе равно age s request (age забрать из request)\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"console.log(req.age);\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Проверить, что salary в ответе равно salary s request (salary забрать из request)\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.salary).to.eql(+req.salary);\r",
							"});\r",
							"console.log(req.salary);\r",
							"\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"var u_salary_1_5_year = jsonData.family.u_salary_1_5_year;\r",
							"\r",
							"pm.test(\"Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request))\", function () {\r",
							"    \r",
							"    pm.expect(u_salary_1_5_year).to.eql(+ req.salary * 4);\r",
							"});\r",
							"console.log(\"u_salary_1_5_year =\" ,+req.salary *4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "maks",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Статус код 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"\r",
							" var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request.\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"var resp_name = jsonData.name;\r",
							"var req_name = pm.request.url.query.get('name');\r",
							"\r",
							"pm.test(\"Проверить, что name в ответе равно name s request (name забрать из request)\", function () {\r",
							"   \r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"console.log(\"resp_name = \" , req_name);\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.) \r",
							"\r",
							"var req_age = pm.request.url.query.get('age');\r",
							"var resp_age = jsonData.age;\r",
							"pm.test(\"Проверить, что age в ответе равно age s request (age забрать из request)\", function () {\r",
							"    \r",
							"    pm.expect(+resp_age).to.eql(+req_age);\r",
							"});\r",
							"console.log(\"resp_age =\" , +req_age);\r",
							"\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"\r",
							" var req_salary = pm.request.url.query.get('salary');\r",
							" var resp_salary = jsonData.salary;\r",
							" pm.test(\"Проверить, что salary в ответе равно salary s request (salary забрать из request)\", function () {\r",
							"\r",
							"     pm.expect(+jsonData.salary).to.eql(+req_salary);\r",
							" });\r",
							" console.log(\"resp_salary = \", +req_salary);\r",
							"\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"\r",
							"console.log(jsonData.family);\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"  \r",
							"var resp_dog = jsonData.family.pets.dog;\r",
							"pm.test(\"Проверить, что у параметра dog есть параметры name\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"console.log(\"dog =\",jsonData.family.pets.dog);\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"\r",
							"var resp_dog_age = jsonData.family.pets.dog;\r",
							"pm.test(\"Проверить, что у параметра dog есть параметры age\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.family.pets.dog).to.be.have.property(\"age\");\r",
							"});\r",
							"console.log(\"dog_age =\",jsonData.family.pets.dog);\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"var dog_name_name = jsonData.family.pets.dog.name;\r",
							"\r",
							"pm.test(\"Проверить, что параметр name имеет значение Luky\", function () {\r",
							"   \r",
							"    pm.expect(dog_name_name).to.eql(\"Luky\");\r",
							"});\r",
							"console.log(\"dog_name =\", dog_name_name)\r",
							"\r",
							"\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"\r",
							"\r",
							"var dog_name_name1 = jsonData.family.pets.dog.age;\r",
							"\r",
							"pm.test(\"Проверить, что параметр name имеет значение 4\", function () {\r",
							"   \r",
							"    pm.expect(dog_name_name1).to.eql(+\"4\");\r",
							"});\r",
							"console.log(\"dog_name_age =\", dog_name_name1)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Nina&age=24&salary=2000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Nina"
						},
						{
							"key": "age",
							"value": "24"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 4. Спарсить request.\r",
							"\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"var resp_name = jsonData.name;\r",
							"var req_name = pm.request.url.query.get('name');\r",
							"pm.test(\"Проверить, что name в ответе равно name s request (name забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"console.log(\"resp_name =\", req_name);\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"\r",
							"var resp_age = jsonData.age;\r",
							"var req_age = pm.request.url.query.get('age');\r",
							"pm.test(\"Проверить, что age в ответе равно age из request (age забрать из request.)\", function () {\r",
							"    pm.expect(resp_age).to.eql(+req_age);\r",
							"});\r",
							"console.log(\"resp_age =\", req_age);\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"\r",
							"console.log(pm.request.url.query.get('salary'));\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"\r",
							"console.log(jsonData.salary);\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"\r",
							"console.log(jsonData.salary[0]);\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"console.log(jsonData.salary[1]);\r",
							"\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"var resp_salary = jsonData.salary;\r",
							"var req_salary = pm.request.url.query.get('salary');\r",
							"\r",
							"pm.test(\"Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(+resp_salary[0]).to.eql(+req_salary);\r",
							"});\r",
							"console.log(\"resp_salary_0 =\", req_salary);\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Проверить, что 1-й элемент параметра salary равен salary из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(+resp_salary[1]).to.eql(+ req_salary*2);\r",
							"});\r",
							"console.log(\"resp_salary_1 =\", + req_salary*2);\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Проверить, что 2-й элемент параметра salary равен salary из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(+resp_salary[2]).to.eql(+ req_salary*3);\r",
							"});\r",
							"console.log(\"resp_salary_2 =\", + req_salary*3);\r",
							"\r",
							"\r",
							"// 15. Создать в окружении переменную name\r",
							"\r",
							"pm.environment.set(\"name\");\r",
							"\r",
							"\r",
							"// 16. Создать в окружении переменную age\r",
							"\r",
							"pm.environment.set(\"age\");\r",
							"\r",
							"// 17. Создать в окружении переменную salary\r",
							"\r",
							"pm.environment.set(\"salary\");\r",
							" \r",
							"// 18. Передать в окружение переменную name\r",
							"var emv_name = jsonData.name;\r",
							"\r",
							"pm.environment.set(\"name\", emv_name);\r",
							"console.log(emv_name)\r",
							"\r",
							"// 19. Передать в окружение переменную age\r",
							"var env_age = jsonData.age;\r",
							"pm.environment.set(\"age\", env_age);\r",
							"console.log(\"age =\" , env_age);\r",
							"\r",
							"// 20. Передать в окружение переменную salary \r",
							"\r",
							"var env_salary = jsonData.salary;\r",
							"pm.environment.set(\"salary\", env_salary[0]);\r",
							"console.log(env_salary[0])\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"\r",
							"\r",
							"// var salary_cik = jsonData.salary;\r",
							"// if (salary_cik[0] < salary_cik[1]){\r",
							"//     console.log(\"salary_cik =\", salary_cik[0])\r",
							"// } if (salary_cik[1] < salary_cik[2]){\r",
							"//     console.log(\"salary_cik =\", salary_cik[1])  \r",
							"// } if (salary_cik[2] > salary_cik[1]){\r",
							"//     console.log(\"salary_cik =\", salary_cik[2]) \r",
							"// }     \r",
							"// else {\r",
							"//     console.log(\"No\")\r",
							"// }\r",
							"\r",
							"var arr = jsonData.salary;\r",
							"// Выведем элементы этого массива в цикле:\r",
							"\r",
							"for (var i = 0; i <= arr.length -1; i++) {\r",
							"\tconsole.log(arr[i]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Vasya&age=45&salary=2000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Vasya"
						},
						{
							"key": "age",
							"value": "45"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Вставить параметр salary из окружения в request\r",
							"\r",
							"var salary = pm.environment.get(\"salary\");\r",
							"var req = request.data;\r",
							"req.salary = salary;\r",
							"console.log(req.salary);\r",
							"\r",
							"\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"\r",
							"var age = pm.environment.get(\"age\");\r",
							"req.age = age;\r",
							"console.log(age);\r",
							"\r",
							"\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"\r",
							"var name = pm.environment.get(\"name\");\r",
							"name = req.name;\r",
							"console.log(name);\r",
							"\r",
							"// 4. Отправить запрос.\r",
							"\r",
							"\r",
							"// 5. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request.\r",
							"\r",
							"var req = request.data;\r",
							"// JSON.parse(pm.request.body.raw);\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"\r",
							"\r",
							"// pm.test(\"Body matches string\", function () {\r",
							"//     pm.expect(pm.response.text()).to.include(\"start_qa_salary\");\r",
							"// });\r",
							"// console.log(\"Uspex\")\r",
							"\r",
							"pm.test(\"Проверить, что json response имеет параметр start_qa_salary\", function () {\r",
							"    \r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"console.log(jsonData);\r",
							"\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"\r",
							"var resp_person_6 = jsonData;\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_6_months\", function () {\r",
							"    \r",
							"    pm.expect(resp_person_6).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"console.log(\"resp_person_6 =\",resp_person_6)\r",
							"\r",
							"\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"var resp_person_12 = jsonData;\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_12_months\", function () {\r",
							"    \r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"console.log(\"resp_person_12 =\", resp_person_12)\r",
							"\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\r",
							"var resp_person_1_5 = jsonData;\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_1.5_year\", function () {\r",
							"    \r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"console.log(\"resp_person_1.5 =\", resp_person_1_5)\r",
							"\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"var resp_person_3_5 = jsonData;\r",
							"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_3.5_years\", function () {\r",
							"    \r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"console.log(\"resp_person_3.5 =\", resp_person_3_5)\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"\r",
							"var resp_person = jsonData;\r",
							"pm.test(\"Проверить, что json response имеет параметр person\", function () {\r",
							"    \r",
							"    pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"console.log(\"resp_person =\", resp_person)\r",
							"\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"\r",
							"var start_qa_salary = jsonData.start_qa_salary;\r",
							"\r",
							"pm.test(\"Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"console.log(\"start_qa_salary =\",+req.salary );\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"\r",
							"var qa_salary_after_6_months = jsonData.qa_salary_after_6_months;\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(qa_salary_after_6_months).to.eql(req.salary*2);\r",
							"});\r",
							"console.log(\"qa_salary_after_6_months =\", req.salary*2 );\r",
							"\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"\r",
							"var qa_salary_after_12_months = jsonData.qa_salary_after_12_months;\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(qa_salary_after_12_months).to.eql(req.salary*2.7);\r",
							"});\r",
							"console.log(\"qa_salary_after_12_months =\", req.salary*2.7 );\r",
							"\r",
							"\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"\r",
							"//  var req = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"var qa_salary_after_1_5_year = jsonData[\"qa_salary_after_1.5_year\"];\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(qa_salary_after_1_5_year).to.eql(req.salary*3.3);\r",
							"});\r",
							"console.log(\"qa_salary_after_1.5_year =\", req.salary*3.3 );\r",
							"\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"\r",
							"var qa_salary_after_3_5_years = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"pm.test(\"Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(qa_salary_after_3_5_years).to.eql(req.salary*3.8);\r",
							"});\r",
							"console.log(\"qa_salary_after_3.5_years =\", req.salary*3.8);\r",
							"\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"var person_u_name = jsonData.person.u_name[1];\r",
							"pm.test(\"Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(person_u_name).to.eql(req.salary);\r",
							"});\r",
							"console.log(\"person_u_name =\", req.salary);\r",
							"\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"\r",
							"var person_u_age = jsonData.person.u_age;\r",
							"pm.test(\"Проверить, что что параметр u_age равен age из request (age забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(person_u_age).to.eql(req.age);\r",
							"});\r",
							"console.log(\"u_age =\", req.age);\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"\r",
							"var person_u_salary_5_years = jsonData.person.u_salary_5_years;\r",
							"pm.test(\"Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\", function () {\r",
							"    \r",
							"    pm.expect(person_u_salary_5_years).to.eql(req.salary * 4.2);\r",
							"});\r",
							"console.log(\"u_salary_5_years =\", req.salary * 4.2);\r",
							"\r",
							"\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"var arr = jsonData.person;\r",
							"// Выведем элементы этого массива в цикле:\r",
							"\r",
							"for (var i = 0; i <= arr.length - 1; i++) {\r",
							"\tconsole.log(arr[i]);\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var resp_token = jsonData.token\r",
							"console.log (resp_token)\r",
							"\r",
							"pm.environment.set(\"token\", resp_token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "password",
							"value": "324dfgd4",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var resp_age = jsonData.age;\r",
							"\r",
							"var req = request.data;\r",
							"var req_age = +req.age;\r",
							"\r",
							"console.log(\"resp_age= \" +resp_age)\r",
							"console.log(\"req_age= \" +req_age)\r",
							"\r",
							"\r",
							"pm.test(\"req_resp_AGE_check\", function () {\r",
							"    \r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		}
	]
}
